<div class="page-header">
  <div class="container">
    <div class="text-center">
      <h1 class="display-5 fw-bold mb-2">üîç Advanced Book Search</h1>
      <p class="lead mb-0 opacity-75">Find your perfect book with our smart search technology</p>
    </div>
  </div>
</div>

<div class="container py-4">
  <!-- Advanced Search Form -->
  <div class="row mb-4">
    <div class="col-lg-8 mx-auto">
      <div class="card search-card shadow-lg">
        <div class="card-header" style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); color: #424242; border: none;">
          <h5 class="mb-0"><i class="bi bi-sliders me-2"></i>Search Filters</h5>
        </div>
        <div class="card-body">
          <form action="/books/search" method="GET">
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="q" class="form-label">Search Keywords</label>
                <input type="text" class="form-control" name="q" id="q" 
                       placeholder="Title, author, or description..." 
                       value="<%= query %>">
              </div>
              <div class="col-md-6 mb-3">
                <label for="genre" class="form-label">Genre</label>
                <input type="text" class="form-control" name="genre" id="genre" 
                       placeholder="e.g., Fiction, Science, Romance..." 
                       value="<%= filters.genre %>">
              </div>
            </div>
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="minPrice" class="form-label">Min Price ($)</label>
                <input type="number" step="0.01" class="form-control" name="minPrice" id="minPrice" 
                       placeholder="0.00" value="<%= filters.minPrice %>">
              </div>
              <div class="col-md-6 mb-3">
                <label for="maxPrice" class="form-label">Max Price ($)</label>
                <input type="number" step="0.01" class="form-control" name="maxPrice" id="maxPrice" 
                       placeholder="999.99" value="<%= filters.maxPrice %>">
              </div>
            </div>
            <div class="d-flex gap-2">
              <button type="submit" class="btn btn-primary">
                <i class="bi bi-search"></i> Search Books
              </button>
              <a href="/books/search" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-clockwise"></i> Clear Filters
              </a>
              <a href="/books" class="btn btn-outline-info">
                <i class="bi bi-book"></i> Browse All Books
              </a>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Search Results -->
  <div class="row">
    <div class="col-12">
      <% if (typeof totalResults !== 'undefined') { %>
        <div class="d-flex justify-content-between align-items-center mb-3">
          <h4>Search Results</h4>
          <div>
            <span class="badge bg-info fs-6"><%= totalResults %> books found</span>
            <% if (typeof searchMethod !== 'undefined') { %>
              <span class="badge bg-secondary ms-2">via <%= searchMethod %></span>
            <% } %>
          </div>
        </div>
      <% } else if (query || filters.genre || filters.minPrice || filters.maxPrice) { %>
        <h4 class="mb-3">Search Results</h4>
      <% } %>

      <!-- Admin Tools -->
      <% if (typeof user !== 'undefined' && user && user.role === 'admin') { %>
        <div class="alert alert-warning mb-3">
          <strong>Admin Tools:</strong>
          <div class="mt-2">
            <a href="/books/debug-es" class="btn btn-sm btn-outline-info me-2" target="_blank">Debug Elasticsearch</a>
            <button class="btn btn-sm btn-outline-warning" onclick="reindexBooks()">Reindex Books</button>
            <small class="text-muted ms-3">Use these tools if search is not working properly</small>
          </div>
        </div>
      <% } %>

      <% if (typeof error !== 'undefined') { %>
        <div class="alert alert-danger">
          <i class="bi bi-exclamation-triangle"></i> Search Error: <%= error %>
        </div>
      <% } %>

      <% if (books && books.length > 0) { %>
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4">
          <% books.forEach(book => { %>
            <div class="col">
              <div class="card book-card h-100">
                <div class="position-relative">
                  <img src="<%= book.image %>" class="card-img-top" alt="<%= book.title %>" 
                       style="height: 250px; width: 100%; object-fit: cover;"
                       onerror="this.src='https://via.placeholder.com/300x250?text=No+Image'">
                  <% if (typeof book._score !== 'undefined') { %>
                    <span class="position-absolute top-0 start-0 badge bg-info m-2">
                      <%= book._score.toFixed(1) %>‚òÖ
                    </span>
                  <% } %>
                  <% if (book.stock < 5 && book.stock > 0) { %>
                    <span class="position-absolute top-0 end-0 badge bg-warning m-2">Limited</span>
                  <% } else if (book.stock <= 0) { %>
                    <span class="position-absolute top-0 end-0 badge bg-danger m-2">Out of Stock</span>
                  <% } %>
                </div>
                <div class="card-body d-flex flex-column">
                  <h6 class="card-title fw-bold text-truncate" title="<%= book.title %>">
                    <%= book.title %>
                  </h6>
                  <p class="card-text text-muted small mb-2">
                    <i class="bi bi-person me-1"></i><%= book.author %>
                  </p>
                  <% if (book.genre) { %>
                    <span class="badge bg-light text-dark mb-2 align-self-start">
                      <i class="bi bi-tag me-1"></i><%= book.genre %>
                    </span>
                  <% } %>
                  <% if (book.description) { %>
                    <p class="card-text flex-grow-1 small text-muted">
                      <%= book.description.length > 70 ? book.description.substring(0, 70) + '...' : book.description %>
                    </p>
                  <% } %>
                  <div class="d-flex justify-content-between align-items-center mt-auto">
                    <span class="price-tag">$<%= book.price %></span>
                    <% if (book.stock !== undefined) { %>
                      <small class="text-muted">
                        <i class="bi bi-box me-1"></i><%= book.stock %>
                      </small>
                    <% } %>
                  </div>
                </div>
                <div class="card-footer bg-transparent">
                  <div class="d-grid gap-2">
                    <button class="btn btn-sm btn-outline-primary">
                      <i class="bi bi-eye"></i> View Details
                    </button>
                    <% if (typeof user !== 'undefined' && user && user.role === 'admin') { %>
                      <div class="btn-group" role="group">
                        <button class="btn btn-sm btn-outline-warning" onclick="editBook('<%= book._id %>')">
                          <i class="bi bi-pencil"></i> Edit
                        </button>
                        <button class="btn btn-sm btn-outline-danger" onclick="deleteBook('<%= book._id %>')">
                          <i class="bi bi-trash"></i> Delete
                        </button>
                      </div>
                    <% } %>
                  </div>
                </div>
              </div>
            </div>
          <% }) %>
        </div>
      <% } else if (query || filters.genre || filters.minPrice || filters.maxPrice) { %>
        <div class="text-center py-5">
          <div class="alert alert-info">
            <i class="bi bi-search"></i>
            <h5>No books found</h5>
            <p>Try adjusting your search criteria or browse all books.</p>
            <a href="/books" class="btn btn-primary">Browse All Books</a>
          </div>
        </div>
      <% } else { %>
        <div class="text-center py-5">
          <div class="alert alert-light">
            <i class="bi bi-book"></i>
            <h5>Start Your Search</h5>
            <p>Enter keywords, genre, or price range to find books.</p>
          </div>
        </div>
      <% } %>
    </div>
  </div>
</div>

<!-- Bootstrap Icons CDN -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">

<!-- Custom CSS for search results -->
<style>
.search-result-card {
  transition: transform 0.2s ease-in-out;
}

.search-result-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.1) !important;
}

.card-title {
  font-size: 0.95rem;
  font-weight: 600;
}

.badge {
  font-size: 0.7rem;
}
</style>

<!-- JavaScript for search functionality -->
<script>
// Include the same edit and delete functions from the main books page
async function editBook(bookId) {
  // Redirect to main books page with edit action
  window.location.href = `/books?edit=${bookId}`;
}

async function deleteBook(bookId) {
  if (!confirm('Are you sure you want to delete this book? This action cannot be undone.')) {
    return;
  }

  try {
    const response = await fetch(`/books/delete/${bookId}`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      }
    });

    const result = await response.json();

    if (result.success) {
      alert('Book deleted successfully!');
      window.location.reload();
    } else {
      alert('Error: ' + (result.error || 'Failed to delete book'));
    }
  } catch (error) {
    console.error('Error deleting book:', error);
    alert('Error: Failed to delete book');
  }
}

// Reindex books function for admin
async function reindexBooks() {
  if (!confirm('This will reindex all books in Elasticsearch. This may take a moment. Continue?')) {
    return;
  }

  try {
    const response = await fetch('/books/reindex', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    });

    const result = await response.json();

    if (result.success) {
      alert(`Reindex completed! ${result.booksCount} books were indexed.`);
      window.location.reload();
    } else {
      alert('Reindex failed: ' + (result.error || 'Unknown error'));
    }
  } catch (error) {
    console.error('Reindex error:', error);
    alert('Reindex failed: ' + error.message);
  }
}

// Auto-submit form on Enter key
document.addEventListener('DOMContentLoaded', function() {
  const searchForm = document.querySelector('form[action="/books/search"]');
  if (searchForm) {
    searchForm.addEventListener('keypress', function(e) {
      if (e.key === 'Enter' && e.target.tagName !== 'BUTTON') {
        e.preventDefault();
        this.submit();
      }
    });
  }
});
</script>
