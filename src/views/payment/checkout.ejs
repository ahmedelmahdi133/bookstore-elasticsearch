<div class="container py-4">
  <div class="row">
    <div class="col-lg-8">
      <div class="card">
        <div class="card-header">
          <h4 class="mb-0"><i class="bi bi-credit-card"></i> Checkout</h4>
        </div>
        <div class="card-body">
          <!-- Shipping Address -->
          <div class="mb-4">
            <h5>Shipping Address</h5>
            <form id="shipping-form">
              <div class="row">
                <div class="col-md-6 mb-3">
                  <label for="fullName" class="form-label">Full Name *</label>
                  <input type="text" class="form-control" id="fullName" name="fullName" required>
                </div>
                <div class="col-md-6 mb-3">
                  <label for="email" class="form-label">Email Address</label>
                  <input type="email" class="form-control" id="email" name="email" value="<%= user ? user.email : '' %>" readonly>
                </div>
              </div>
              <div class="mb-3">
                <label for="address" class="form-label">Street Address *</label>
                <input type="text" class="form-control" id="address" name="address" required>
              </div>
              <div class="row">
                <div class="col-md-6 mb-3">
                  <label for="city" class="form-label">City *</label>
                  <input type="text" class="form-control" id="city" name="city" required>
                </div>
                <div class="col-md-3 mb-3">
                  <label for="postalCode" class="form-label">Postal Code *</label>
                  <input type="text" class="form-control" id="postalCode" name="postalCode" required>
                </div>
                <div class="col-md-3 mb-3">
                  <label for="country" class="form-label">Country *</label>
                  <select class="form-control" id="country" name="country" required>
                    <option value="US">United States</option>
                    <option value="CA">Canada</option>
                    <option value="GB">United Kingdom</option>
                    <option value="DE">Germany</option>
                    <option value="FR">France</option>
                    <option value="AU">Australia</option>
                  </select>
                </div>
              </div>
            </form>
          </div>

          <!-- Payment Method -->
          <div class="mb-4">
            <h5>Payment Method</h5>
            <div id="payment-element">
              <!-- Stripe Elements will create form elements here -->
            </div>
            <div id="payment-message" class="alert d-none" role="alert"></div>
          </div>

          <div class="d-grid">
            <button id="submit-payment" class="btn btn-success btn-lg">
              <span id="button-text">
                <i class="bi bi-lock"></i> Complete Payment ($<%= cart.totalAmount.toFixed(2) %>)
              </span>
              <div id="loading-spinner" class="spinner-border spinner-border-sm d-none" role="status">
                <span class="visually-hidden">Loading...</span>
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>

    <div class="col-lg-4">
      <!-- Order Summary -->
      <div class="card">
        <div class="card-header">
          <h5 class="mb-0">Order Summary</h5>
        </div>
        <div class="card-body">
          <% cart.items.forEach(item => { %>
            <div class="d-flex justify-content-between mb-2">
              <div>
                <small class="fw-bold"><%= item.book.title %></small><br>
                <small class="text-muted">Qty: <%= item.quantity %> Ã— $<%= item.price.toFixed(2) %></small>
              </div>
              <small>$<%= (item.price * item.quantity).toFixed(2) %></small>
            </div>
          <% }) %>
          
          <hr>
          <div class="d-flex justify-content-between mb-2">
            <span>Subtotal:</span>
            <span>$<%= cart.totalAmount.toFixed(2) %></span>
          </div>
          <div class="d-flex justify-content-between mb-2">
            <span>Shipping:</span>
            <span class="text-success">FREE</span>
          </div>
          <div class="d-flex justify-content-between mb-2">
            <span>Tax:</span>
            <span>$0.00</span>
          </div>
          <hr>
          <div class="d-flex justify-content-between">
            <strong>Total:</strong>
            <strong>$<%= cart.totalAmount.toFixed(2) %></strong>
          </div>
        </div>
      </div>

      <!-- Security Info -->
      <div class="card mt-3">
        <div class="card-body text-center">
          <i class="bi bi-shield-check text-success display-6"></i>
          <h6 class="mt-2">Secure Payment</h6>
          <small class="text-muted">Your payment information is encrypted and secure</small>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Bootstrap Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">

<!-- Stripe JS -->
<script src="https://js.stripe.com/v3/"></script>

<script>
const stripe = Stripe('<%= stripePublishableKey %>');
let elements;
let clientSecret;

async function initialize() {
  try {
    // Create payment intent
    const response = await fetch('/payment/create-payment-intent', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    });

    const data = await response.json();
    
    if (!response.ok) {
      throw new Error(data.error || 'Failed to create payment intent');
    }

    clientSecret = data.clientSecret;

    elements = stripe.elements({ clientSecret });

    const paymentElement = elements.create('payment');
    paymentElement.mount('#payment-element');
  } catch (error) {
    showMessage('Error: ' + error.message, 'danger');
  }
}

async function handleSubmit(e) {
  e.preventDefault();
  setLoading(true);

  // Validate shipping form
  const shippingForm = document.getElementById('shipping-form');
  if (!shippingForm.checkValidity()) {
    shippingForm.reportValidity();
    setLoading(false);
    return;
  }

  // Get shipping address
  const shippingAddress = {
    fullName: document.getElementById('fullName').value,
    address: document.getElementById('address').value,
    city: document.getElementById('city').value,
    postalCode: document.getElementById('postalCode').value,
    country: document.getElementById('country').value
  };

  try {
    const { error } = await stripe.confirmPayment({
      elements,
      confirmParams: {
        return_url: window.location.origin + '/payment/confirmation'
      },
      redirect: 'if_required'
    });

    if (error) {
      showMessage(error.message, 'danger');
    } else {
      // Payment succeeded, process the order
      const paymentIntent = await stripe.retrievePaymentIntent(clientSecret);
      
      const orderResponse = await fetch('/payment/success', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          paymentIntentId: paymentIntent.paymentIntent.id,
          shippingAddress
        })
      });

      const orderResult = await orderResponse.json();

      if (orderResult.success) {
        window.location.href = `/payment/confirmation/${orderResult.orderId}`;
      } else {
        showMessage('Error: ' + (orderResult.error || 'Failed to process order'), 'danger');
      }
    }
  } catch (error) {
    showMessage('Error: ' + error.message, 'danger');
  }

  setLoading(false);
}

function showMessage(message, type = 'info') {
  const messageDiv = document.getElementById('payment-message');
  messageDiv.className = `alert alert-${type}`;
  messageDiv.textContent = message;
  messageDiv.classList.remove('d-none');
  
  setTimeout(() => {
    messageDiv.classList.add('d-none');
  }, 5000);
}

function setLoading(isLoading) {
  const submitButton = document.getElementById('submit-payment');
  const buttonText = document.getElementById('button-text');
  const loadingSpinner = document.getElementById('loading-spinner');

  if (isLoading) {
    submitButton.disabled = true;
    buttonText.classList.add('d-none');
    loadingSpinner.classList.remove('d-none');
  } else {
    submitButton.disabled = false;
    buttonText.classList.remove('d-none');
    loadingSpinner.classList.add('d-none');
  }
}

// Initialize when page loads
document.addEventListener('DOMContentLoaded', function() {
  initialize();
  
  document.getElementById('submit-payment').addEventListener('click', handleSubmit);
});
</script>
